{"version":3,"sources":["components/ContactsForm/ContactsForm.module.scss","components/ContactsList/ContactsList.module.scss","components/Filter/Filter.module.scss","components/Container/Container.module.scss","components/Section/Section.module.scss","components/Container/Container.js","components/Section/Section.js","components/ContactsList/ContactsList.js","components/ContactsForm/ContactsForm.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","Container","children","className","style","Section","section","ContactsList","contacts","deleteContactHandler","contact__list","map","id","name","number","contact__item","contact__name","contact__number","contact__button","onClick","Phonebook","state","toChangeHandler","currentTarget","value","setState","toSubmitHandler","event","preventDefault","props","addContactHandler","form","onSubmit","this","form__list","CONFIG","type","pattern","title","form__item","form__input","onChange","placeholder","required","cut","htmlFor","form__button","Component","propTypes","PropTypes","string","isRequired","Filter","contactName","findByNameHandler","filter__container","filter__input","filter__label","App","filter","addContact","some","contact","alert","nanoid","deleteContact","contactId","prevState","findByName","filterList","filteredItems","toLowerCase","includes","localStorage","setItem","JSON","stringify","parse","getItem","defaultProps","earlyAddContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f2468f48.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactsForm_form__26zMW\",\"form__list\":\"ContactsForm_form__list__2q2Vi\",\"form__item\":\"ContactsForm_form__item__ky9C6\",\"form__input\":\"ContactsForm_form__input__2G-5s\",\"cut\":\"ContactsForm_cut__2tduS\",\"placeholder\":\"ContactsForm_placeholder__1CaOT\",\"form__button\":\"ContactsForm_form__button__3vF5R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact__list\":\"ContactsList_contact__list__2w6Jh\",\"contact__item\":\"ContactsList_contact__item__3pJsP\",\"contact__name\":\"ContactsList_contact__name__3mksv\",\"contact__number\":\"ContactsList_contact__number__utzf6\",\"contact__button\":\"ContactsList_contact__button__2aN48\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter__container\":\"Filter_filter__container__-KiXd\",\"filter__input\":\"Filter_filter__input__3TCad\",\"cut\":\"Filter_cut__3AA1u\",\"filter__label\":\"Filter_filter__label__2HGNe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3t6ob\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__hf6U8\"};","import React from 'react';\nimport style from './Container.module.scss';\n\nexport default function Container({ children }) {\n\treturn <div className={style.Container}>{children}</div>;\n}\n","import PropTypes from 'prop-types';\nimport style from './Section.module.scss';\n\nexport default function Section({ children }) {\n\treturn <section className={style.section}>{children}</section>;\n}\n\nSection.propTypes = {\n\tchildren: PropTypes.array.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './ContactsList.module.scss';\n\nexport default function ContactsList({ contacts, deleteContactHandler }) {\n   return (\n      <ul className={style.contact__list}>\n         {contacts.map(({ id, name, number }) => (\n            <li key={id} className={style.contact__item}>\n               <p className={style.contact__name}>{name}:</p>\n               <p className={style.contact__number}>{number}</p>\n               <button\n                  className={style.contact__button}\n                  onClick={() => deleteContactHandler(id)}\n               >\n                  Delete\n               </button>\n            </li>\n         ))}\n      </ul>\n   );\n}\n\nContactsList.propTypes = {\n   contacts: PropTypes.arrayOf(\n      PropTypes.shape({\n         id: PropTypes.string.isRequired,\n         name: PropTypes.string.isRequired,\n         number: PropTypes.string.isRequired,\n      }),\n   ),\n   deleteContactHandler: PropTypes.func.isRequired,\n};\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport CONFIG from '../../data/formConfig.json';\nimport style from './ContactsForm.module.scss';\n\nexport default class Phonebook extends Component {\n\tstatic propTypes = {\n\t\tname: PropTypes.string,\n\t\tnumber: PropTypes.number,\n\t};\n\n\tstate = {\n\t\tname: '',\n\t\tnumber: '',\n\t};\n\n\ttoChangeHandler = ({ currentTarget }) => {\n\t\tconst { name, value } = currentTarget;\n\t\tthis.setState({ [name]: value });\n\t};\n\n\ttoSubmitHandler = event => {\n\t\tevent.preventDefault();\n\t\tthis.props.addContactHandler(this.state);\n\t\tthis.setState({ name: '', number: '' });\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<form className={style.form} onSubmit={this.toSubmitHandler}>\n\t\t\t\t<ul className={style.form__list}>\n\t\t\t\t\t{CONFIG.map(({ type, name, pattern, title }) => (\n\t\t\t\t\t\t<li key={name} className={style.form__item}>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tclassName={style.form__input}\n\t\t\t\t\t\t\t\tid={type}\n\t\t\t\t\t\t\t\ttype={type}\n\t\t\t\t\t\t\t\tname={name}\n\t\t\t\t\t\t\t\tpattern={pattern}\n\t\t\t\t\t\t\t\ttitle={title}\n\t\t\t\t\t\t\t\tvalue={this.state[name]}\n\t\t\t\t\t\t\t\tonChange={this.toChangeHandler}\n\t\t\t\t\t\t\t\tplaceholder=\" \"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<div className={style.cut}></div>\n\t\t\t\t\t\t\t<label className={style.placeholder} htmlFor={type}>\n\t\t\t\t\t\t\t\t{name}\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t\t<button className={style.form__button} type=\"submit\">\n\t\t\t\t\tAdd Contact\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t);\n\t}\n}\nCONFIG.propTypes = {\n\ttype: PropTypes.string.isRequired,\n\tname: PropTypes.string.isRequired,\n\tpattern: PropTypes.string.isRequired,\n\ttitle: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './Filter.module.scss';\n\nexport default function Filter({ contactName, findByNameHandler }) {\n   return (\n      <div className={style.filter__container}>\n         <input\n            className={style.filter__input}\n            id=\"input\"\n            type=\"text\"\n            value={contactName}\n            onChange={findByNameHandler}\n            placeholder=\" \"\n         />\n         <div className={style.cut}></div>\n         <label className={style.filter__label} htmlFor=\"input\">\n            Find contacts by name\n         </label>\n      </div>\n   );\n}\n\nFilter.propTypes = {\n   contactName: PropTypes.string.isRequired,\n   findByNameHandler: PropTypes.func.isRequired,\n};\n","import { Component } from 'react';\nimport { nanoid } from 'nanoid';\nimport './App.scss';\nimport Container from './components/Container/Container';\nimport Section from './components/Section/Section';\nimport ContactsList from './components/ContactsList/ContactsList';\nimport ContactsForm from './components/ContactsForm/ContactsForm';\nimport Filter from './components/Filter/Filter';\nimport earlyAddContacts from '../src/data/contacts.json';\n\nexport default class App extends Component {\n   static defaultProps = {\n      contacts: earlyAddContacts,\n      filter: '',\n   };\n\n   state = {\n      contacts: this.props.contacts,\n      filter: this.props.filter,\n   };\n\n   componentDidUpdate(prevState) {\n      if (this.state.contacts !== prevState.contacts) {\n         localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n      }\n   }\n\n   componentDidMount() {\n      const contacts = JSON.parse(localStorage.getItem('contacts'));\n      contacts && this.setState({ contacts });\n   }\n\n   addContact = ({ name, number }) => {\n      this.state.contacts.some(contact => name === contact.name)\n         ? alert(`${name} is already in contacts`)\n         : this.setState(({ contacts }) => ({\n              contacts: [...contacts, { name, number, id: nanoid() }],\n           }));\n   };\n\n   deleteContact = contactId => {\n      this.setState(prevState => ({\n         contacts: prevState.contacts.filter(\n            contact => contact.id !== contactId,\n         ),\n      }));\n   };\n\n   findByName = ({ currentTarget }) => {\n      this.setState({\n         filter: currentTarget.value,\n      });\n   };\n\n   filterList = () => {\n      const { contacts, filter } = this.state;\n      const filteredItems = filter.toLowerCase();\n\n      return contacts.filter(contact =>\n         contact.name.toLowerCase().includes(filteredItems),\n      );\n   };\n\n   render() {\n      const { filter } = this.state;\n      const { addContact, findByName, filterList, deleteContact } = this;\n      return (\n         <main className=\"App\">\n            <Container>\n               <Section>\n                  <h1 className=\"app-title\">Phonebook</h1>\n                  <ContactsForm addContactHandler={addContact} />\n               </Section>\n               <Section>\n                  <h2 className=\"app-title\">Contacts</h2>\n                  <Filter contactName={filter} findByNameHandler={findByName} />\n                  <ContactsList\n                     contacts={filterList()}\n                     deleteContactHandler={deleteContact}\n                  />\n               </Section>\n            </Container>\n         </main>\n      );\n   }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n   <React.StrictMode>\n      <App />\n   </React.StrictMode>,\n   document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}